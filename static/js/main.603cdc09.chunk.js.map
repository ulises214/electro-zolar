{"version":3,"sources":["hooks/useMatchScreenSize.ts","assets/img/icons/bars.svg","assets/img/icons/times.svg","components/BurgerButton.tsx","assets/img/logo.svg","components/Logo.tsx","components/NavBar.tsx","components/AppBar.tsx","assets/img/icons/mail.svg","assets/img/icons/mobile.svg","assets/img/icons/phone.svg","assets/img/icons/facebook.svg","components/Footer.tsx","components/LinkButton.tsx","components/Section.tsx","assets/img/icons/globe.svg","assets/img/icons/dollar.svg","assets/img/icons/plus.svg","pages/Home/Benefits.tsx","assets/img/promocion del mes.jpg","pages/Home/Presentation.tsx","pages/Home/ReadyToStart.tsx","pages/Home/WhoWeAre.tsx","pages/Home/index.tsx","App.tsx","serviceWorkerRegistration.ts","reportWebVitals.ts","index.tsx"],"names":["useMatchScreenSize","size","breakLine","useState","match","setMatch","handleChange","e","matches","useEffect","media","window","matchMedia","addEventListener","removeEventListener","BurgerButton","onClick","isOpen","location","useLocation","className","src","TimesIcon","BarsIcon","alt","Logo","to","ElectroZolarLogo","NavLink","href","title","NavBar","id","AppBar","isTabletOrLower","showNavBar","setShowNavBar","show","FooterNetworkItem","target","rel","Footer","MailIcon","MobileIcon","PhoneIcon","FacebookIcon","LinkButton","children","color","Section","BenefitItem","Benefits","GlobeIcon","DollarIcon","PlusIcon","Presentation","Promocion","ReadyToStart","WhoWeAre","HomePage","Routes","exact","path","Home","App","isLocalhost","Boolean","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","render","StrictMode","document","getElementById","URL","process","origin","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.603cdc09.chunk.js","sourcesContent":["import { useEffect, useState } from 'react';\nimport { ScreenBreakPoints } from '../helpers/types';\n\nfunction useMatchScreenSize(\n  size: ScreenBreakPoints,\n  breakLine: 'min' | 'max'\n) {\n  const [match, setMatch] = useState(false);\n\n  const handleChange = (e: MediaQueryListEvent) => setMatch(e.matches);\n\n  useEffect(() => {\n    const media = window.matchMedia(`(${breakLine}-width: ${size})`);\n    media.addEventListener('change', handleChange);\n    return () => {\n      media.removeEventListener('change', handleChange);\n    };\n  }, [breakLine, size]);\n  useEffect(() => {\n    const media = window.matchMedia(`(${breakLine}-width: ${size})`);\n    setMatch(media.matches);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return match;\n}\nexport default useMatchScreenSize;\n","export default __webpack_public_path__ + \"static/media/bars.e73e1c05.svg\";","export default __webpack_public_path__ + \"static/media/times.a028b33d.svg\";","import { useEffect } from 'react';\nimport { useLocation } from 'react-router';\nimport BarsIcon from '../assets/img/icons/bars.svg';\nimport TimesIcon from '../assets/img/icons/times.svg';\n\ninterface BurgerButtonProps {\n  onClick: (arg0: boolean) => void;\n  isOpen: boolean;\n}\nconst BurgerButton = ({ onClick, isOpen }: BurgerButtonProps) => {\n  const handleClick = () => {\n    onClick(!isOpen);\n  };\n  const location = useLocation();\n  useEffect(() => {\n    onClick(false);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [location]);\n  return (\n    <img\n      onClick={handleClick}\n      className='burger_button'\n      src={isOpen ? TimesIcon : BarsIcon}\n      alt='Toggle Menu'\n    />\n  );\n};\n\nexport default BurgerButton;\n","export default __webpack_public_path__ + \"static/media/logo.fdee463d.svg\";","import { Link } from 'react-router-dom';\n\nimport ElectroZolarLogo from '../assets/img/logo.svg';\nconst Logo = () => {\n  return (\n    <Link className='logo' to={'/'}>\n      <img src={ElectroZolarLogo} alt='Logo electrozolar' />\n      <span>Electro</span>\n      <span>Zolar</span>\n    </Link>\n  );\n};\n\nexport default Logo;\n","import { Link } from 'react-router-dom';\ninterface NavLinkProps {\n  href: string;\n  title: string;\n}\nconst NavLink = ({ href, title }: NavLinkProps) => {\n  return (\n    <Link to={href} className='navlink'>\n      {title}\n    </Link>\n  );\n};\n// interface NavBarProps {}\nconst NavBar = () => {\n  return (\n    <nav id='bars_menu_nav' className='nav_menu__container'>\n      <NavLink href='/' title='Inicio' />\n      <NavLink href='/instalaciones' title='Instalaciones' />\n      <NavLink href='/servicio' title='Servicio' />\n    </nav>\n  );\n};\n\nexport default NavBar;\n","import { useEffect, useState } from 'react';\nimport useMatchScreenSize from '../hooks/useMatchScreenSize';\n\nimport BurgerButton from './BurgerButton';\nimport Logo from './Logo';\nimport NavBar from './NavBar';\n\nconst AppBar = () => {\n  const isTabletOrLower = useMatchScreenSize('1024px', 'max');\n  const [showNavBar, setShowNavBar] = useState(true);\n\n  const toggleShowNavBar = (show: boolean) => setShowNavBar(show);\n  useEffect(() => {\n    setShowNavBar(!isTabletOrLower);\n  }, [isTabletOrLower]);\n\n  return (\n    <header>\n      <Logo />\n      {isTabletOrLower && (\n        <BurgerButton onClick={toggleShowNavBar} isOpen={showNavBar} />\n      )}\n      {showNavBar && <NavBar />}\n    </header>\n  );\n};\n\nexport default AppBar;\n","export default __webpack_public_path__ + \"static/media/mail.cd379f84.svg\";","export default __webpack_public_path__ + \"static/media/mobile.9caf98f8.svg\";","export default __webpack_public_path__ + \"static/media/phone.97cc5b37.svg\";","export default __webpack_public_path__ + \"static/media/facebook.b0b05e09.svg\";","import MailIcon from '../assets/img/icons/mail.svg';\nimport MobileIcon from '../assets/img/icons/mobile.svg';\nimport PhoneIcon from '../assets/img/icons/phone.svg';\nimport FacebookIcon from '../assets/img/icons/facebook.svg';\nimport Logo from './Logo';\nconst FooterNetworkItem = ({\n  src,\n  title,\n  href,\n}: {\n  src: string;\n  title: string;\n  href: string;\n}) => {\n  return (\n    <a\n      className='footer__link'\n      href={href}\n      target='_blank'\n      rel='noreferrer'\n    >\n      <img className='footer__link__img' src={src} alt='Network link' />\n      <span className='footer__link__span'>{title}</span>\n    </a>\n  );\n};\nconst Footer = () => {\n  return (\n    <footer className='section section__white'>\n      <div className='footer__container'>\n        <Logo />\n        <div className='footer__container__links'>\n          <h3>Contáctanos</h3>\n          <FooterNetworkItem\n            src={MailIcon}\n            title='electrozolar@hotmail.com'\n            href='mailto:electrozolar@hotmail.com'\n          />\n          <FooterNetworkItem\n            src={MobileIcon}\n            title='312 157 2677'\n            href='tel:3121572677'\n          />\n          <FooterNetworkItem\n            src={PhoneIcon}\n            title='312 311 9644'\n            href='tel:3123119644'\n          />\n          <FooterNetworkItem\n            src={FacebookIcon}\n            title='@ElectroZolar'\n            href='https://www.facebook.com/ElectroZolar'\n          />\n        </div>\n      </div>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import { Link } from 'react-router-dom';\ninterface ButtonProps {\n  children: string;\n  color: 'yellow' | 'blue';\n  to: string;\n}\nconst LinkButton = ({ children, color, to }: ButtonProps) => {\n  return (\n    <Link to={to} className={`link-button link-button-${color}`}>\n      {children}\n    </Link>\n  );\n};\n\nexport default LinkButton;\n","interface SectionProps {\n  color: 'white' | 'blue';\n  children: React.ReactNode;\n  className?: string;\n}\nexport const Section = ({ color, children, className }: SectionProps) => {\n  return (\n    <section className={`${className} section section__${color}`}>\n      {children}\n    </section>\n  );\n};\n","export default __webpack_public_path__ + \"static/media/globe.651e6021.svg\";","export default __webpack_public_path__ + \"static/media/dollar.859e3ef9.svg\";","export default __webpack_public_path__ + \"static/media/plus.f1ba6bde.svg\";","import LinkButton from '../../components/LinkButton';\nimport { Section } from '../../components/Section';\nimport GlobeIcon from '../../assets/img/icons/globe.svg';\nimport DollarIcon from '../../assets/img/icons/dollar.svg';\nimport PlusIcon from '../../assets/img/icons/plus.svg';\n\ninterface BenefitItemProps {\n  src: string;\n  children: string;\n  href?: string;\n  title: string;\n}\nconst BenefitItem = ({ src, children, title, href }: BenefitItemProps) => {\n  return (\n    <div className='benefits__item'>\n      <img\n        className='benefits__item__img'\n        src={src}\n        alt={`Beneficio sobre ${title}`}\n      />\n      <h2 className='benefits__item__title'>{title}</h2>\n      <p className='benefits__item__text'>{children}</p>\n      <LinkButton color='yellow' to={href ?? '/'}>\n        Leer más\n      </LinkButton>\n    </div>\n  );\n};\nconst Benefits = () => {\n  return (\n    <Section color='blue' className='benefits'>\n      <BenefitItem src={GlobeIcon} title='Calentamiento global' href='/'>\n        El sistema fotovoltaico ayuda a reducir la emisión de gases con\n        efecto invernadero.\n      </BenefitItem>\n      <BenefitItem src={DollarIcon} title='Ahorro económico' href='/'>\n        El ahorro energético economico se verá reflejado con el paso del\n        tiempo en las facturas.\n      </BenefitItem>\n      <BenefitItem src={PlusIcon} title='Disponibilidad global' href='/'>\n        El sol brilla en todos los lugares del mundo, por lo tanto, si hay\n        sol hay energía solar en mayor o menor medida.\n      </BenefitItem>\n    </Section>\n  );\n};\nexport default Benefits;\n","export default __webpack_public_path__ + \"static/media/promocion del mes.e4a0cdb7.jpg\";","import Promocion from '../../assets/img/promocion del mes.jpg';\nimport LinkButton from '../../components/LinkButton';\nimport { Section } from '../../components/Section';\nconst Presentation = () => (\n  <Section color='white' className='presentation'>\n    <div className='presentation__info'>\n      <h1>Energía solar al alcance de todos</h1>\n      <p>\n        El sol es la fuente de energía más prometedora, por ello ponemos\n        productos de <b>calidad</b> y <b>durabilidad</b> para obten r\n        beneficio y así la máxima energía eléctrica procesada por paneles\n        de Electro Zolar.\n      </p>\n      <LinkButton to='servicio' color='yellow'>\n        ENVÍA TU RECIBO DE LUZ\n      </LinkButton>\n    </div>\n    <img\n      className='presentation__image'\n      src={Promocion}\n      alt='Promoción del mes'\n    />\n  </Section>\n);\nexport default Presentation;\n","import LinkButton from '../../components/LinkButton';\nimport { Section } from '../../components/Section';\n\nconst ReadyToStart = () => {\n  return (\n    <Section color='blue' className='ready-to-start'>\n      <h2 className='ready-to-start__title'>¿Listo para empezar?</h2>\n      <LinkButton color='yellow' to='/'>\n        Envía tu recivo de luz\n      </LinkButton>\n    </Section>\n  );\n};\n\nexport default ReadyToStart;\n","import { Section } from '../../components/Section';\n\nconst WhoWeAre = () => {\n  return (\n    <Section color='white' className='who-we-are'>\n      <h2 className='who-we-are__title'>¿Quiénes somos?</h2>\n      <p className='who-we-are__text'>\n        Electro Zolar es una empresa fundada en el 2013 en la ciudad de\n        Colima, con el objetivo de ofrecer productos de calidad para la\n        generación de energía solar al alcance de todos. Para así obtener\n        un doble beneficio, el de tu economía y en pro al medio ambiente.\n        Manteniendo una constante actualización en nuestros equipos\n        ofrecidos; nuestro campo de acción es en: casa, negocio y el campo\n        agrícola.\n      </p>\n    </Section>\n  );\n};\n\nexport default WhoWeAre;\n","import Benefits from './Benefits';\nimport Presentation from './Presentation';\nimport ReadyToStart from './ReadyToStart';\nimport WhoWeAre from './WhoWeAre';\n\nconst HomePage = () => {\n  return (\n    <>\n      <Presentation />\n      <Benefits />\n      <WhoWeAre />\n      <ReadyToStart />\n    </>\n  );\n};\nexport default HomePage;\n","import { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\nimport AppBar from './components/AppBar';\nimport Footer from './components/Footer';\nimport HomePage from './pages/Home';\n\nconst Routes = () => {\n  return (\n    <Switch>\n      <Route exact path='/'>\n        <HomePage />\n      </Route>\n      <Route exact path='/instalaciones'>\n        pito2\n      </Route>\n      <Route exact path='/servicio'>\n        pito3\n      </Route>\n    </Switch>\n  );\n};\n\nfunction App() {\n  return (\n    <Router>\n      <AppBar />\n      <article>\n        <Routes />\n      </article>\n      <Footer />\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (\n    process.env.NODE_ENV === 'production' &&\n    'serviceWorker' in navigator\n  ) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready\n          .then(() => {\n            console.log(\n              'This web app is being served cache-first by a service ' +\n                'worker. To learn more, visit https://cra.link/PWA'\n            );\n          })\n          .catch((e) => console.log('Pito', e));\n      } else {\n        console.log('SW registred');\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(\n      ({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n        getCLS(onPerfEntry);\n        getFID(onPerfEntry);\n        getFCP(onPerfEntry);\n        getLCP(onPerfEntry);\n        getTTFB(onPerfEntry);\n      }\n    );\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport { render } from 'react-dom';\nimport 'normalize.css/normalize.css';\nimport './assets/scss/index.scss';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nrender(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}